import time
import m5utils
from hardware import *
from unit import IMUProUnit
import M5
from M5 import *

print('IMU, Reflective, Angle, and Key example')

M5.begin()

i2c0 = I2C(0, scl=Pin(39), sda=Pin(38), freq=100000)

imupro_0 = IMUProUnit(i2c0)

reflective = ADC(Pin(1), atten=ADC.ATTN_11DB)

angle = ADC(Pin(8), atten=ADC.ATTN_11DB)

key = Pin(6, Pin.IN, Pin.PULL_UP)

# Function to remap a value from one range to another
def remap(value, in_min, in_max, out_min, out_max):
    return int((value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min)

while True:
    M5.update()
    
    # Read IMU accelerometer Y-axis value
    imu_data = imupro_0.get_accelerometer()  # Get accelerometer values (x, y, z)
    acc_x = imu_data[0]  # Extract X-axis acceleration

    # Adjust remapping range to keep values smaller
    acc_x_mapped = remap(acc_x, -0.5, 0.5, 0, 4095)  # Assuming acc_x is within -0.5 to 0.5

    # Read Reflective and Angle sensor values
    reflective_val = reflective.read()
    angle_val = angle.read()

    # Convert Key state to a real number (False = 0, True = 4095)
    key_state = 4095 if not key.value() else 0  # If pressed, 4095; if released, 0

    # Print sensor values
    print(f"{acc_x_mapped}, {reflective_val}, {angle_val}, {key_state}")
    
    # Add a short delay to avoid flooding the serial output
    time.sleep(0.1)
